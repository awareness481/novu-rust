/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StepFilter {
    #[serde(rename = "isNegated")]
    pub is_negated: bool,
    #[serde(rename = "type")]
    pub r#type: Type,
    #[serde(rename = "value")]
    pub value: Value,
    #[serde(rename = "children")]
    pub children: Vec<models::FieldFilterPart>,
}

impl StepFilter {
    pub fn new(is_negated: bool, r#type: Type, value: Value, children: Vec<models::FieldFilterPart>) -> StepFilter {
        StepFilter {
            is_negated,
            r#type,
            value,
            children,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "BOOLEAN")]
    Boolean,
    #[serde(rename = "TEXT")]
    Text,
    #[serde(rename = "DATE")]
    Date,
    #[serde(rename = "NUMBER")]
    Number,
    #[serde(rename = "STATEMENT")]
    Statement,
    #[serde(rename = "LIST")]
    List,
    #[serde(rename = "MULTI_LIST")]
    MultiList,
    #[serde(rename = "GROUP")]
    Group,
}

impl Default for Type {
    fn default() -> Type {
        Self::Boolean
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Value {
    #[serde(rename = "AND")]
    And,
    #[serde(rename = "OR")]
    Or,
}

impl Default for Value {
    fn default() -> Value {
        Self::And
    }
}

