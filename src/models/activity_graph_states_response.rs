/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActivityGraphStatesResponse {
    #[serde(rename = "_id")]
    pub _id: String,
    #[serde(rename = "count")]
    pub count: f64,
    #[serde(rename = "templates")]
    pub templates: Vec<String>,
    #[serde(rename = "channels")]
    pub channels: Vec<Channels>,
}

impl ActivityGraphStatesResponse {
    pub fn new(_id: String, count: f64, templates: Vec<String>, channels: Vec<Channels>) -> ActivityGraphStatesResponse {
        ActivityGraphStatesResponse {
            _id,
            count,
            templates,
            channels,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Channels {
    #[serde(rename = "in_app")]
    InApp,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "sms")]
    Sms,
    #[serde(rename = "chat")]
    Chat,
    #[serde(rename = "push")]
    Push,
}

impl Default for Channels {
    fn default() -> Channels {
        Self::InApp
    }
}

