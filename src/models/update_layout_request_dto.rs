/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateLayoutRequestDto {
    /// User defined custom name and provided by the user that will name the Layout updated.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// User defined custom key that will be a unique identifier for the Layout updated.
    #[serde(rename = "identifier")]
    pub identifier: String,
    /// User defined description of the layout
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// User defined content for the layout.
    #[serde(rename = "content", skip_serializing_if = "Option::is_none")]
    pub content: Option<String>,
    /// User defined variables to render in the layout placeholders.
    #[serde(rename = "variables", skip_serializing_if = "Option::is_none")]
    pub variables: Option<Vec<serde_json::Value>>,
    /// Variable that defines if the layout is chosen as default when creating a layout.
    #[serde(rename = "isDefault", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<bool>,
}

impl UpdateLayoutRequestDto {
    pub fn new(identifier: String) -> UpdateLayoutRequestDto {
        UpdateLayoutRequestDto {
            name: None,
            identifier,
            description: None,
            content: None,
            variables: None,
            is_default: None,
        }
    }
}

