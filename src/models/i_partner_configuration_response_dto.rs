/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IPartnerConfigurationResponseDto {
    #[serde(rename = "projectIds", skip_serializing_if = "Option::is_none")]
    pub project_ids: Option<Vec<String>>,
    #[serde(rename = "accessToken")]
    pub access_token: String,
    #[serde(rename = "configurationId")]
    pub configuration_id: String,
    #[serde(rename = "teamId", skip_serializing_if = "Option::is_none")]
    pub team_id: Option<String>,
    /// Partner Type Enum
    #[serde(rename = "partnerType")]
    pub partner_type: PartnerType,
}
/// Partner Type Enum
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PartnerType {
    #[serde(rename = "vercel")]
    Vercel,
}

impl Default for PartnerType {
    fn default() -> PartnerType {
        Self::Vercel
    }
}
