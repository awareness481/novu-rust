/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkflowResponse {
    #[serde(rename = "_id", skip_serializing_if = "Option::is_none")]
    pub _id: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "active")]
    pub active: bool,
    #[serde(rename = "draft")]
    pub draft: bool,
    #[serde(rename = "preferenceSettings")]
    pub preference_settings: Box<models::PreferenceChannels>,
    #[serde(rename = "critical")]
    pub critical: bool,
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
    #[serde(rename = "steps")]
    pub steps: Vec<models::NotificationStep>,
    #[serde(rename = "_organizationId")]
    pub _organization_id: String,
    #[serde(rename = "_creatorId")]
    pub _creator_id: String,
    #[serde(rename = "_environmentId")]
    pub _environment_id: String,
    #[serde(rename = "triggers")]
    pub triggers: Vec<models::NotificationTrigger>,
    #[serde(rename = "_notificationGroupId")]
    pub _notification_group_id: String,
    #[serde(rename = "_parentId", skip_serializing_if = "Option::is_none")]
    pub _parent_id: Option<String>,
    #[serde(rename = "deleted")]
    pub deleted: bool,
    #[serde(rename = "deletedAt")]
    pub deleted_at: String,
    #[serde(rename = "deletedBy")]
    pub deleted_by: String,
    #[serde(rename = "notificationGroup", skip_serializing_if = "Option::is_none")]
    pub notification_group: Option<Box<models::NotificationGroup>>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<serde_json::Value>,
    #[serde(rename = "workflowIntegrationStatus", skip_serializing_if = "Option::is_none")]
    pub workflow_integration_status: Option<serde_json::Value>,
}

impl WorkflowResponse {
    pub fn new(name: String, description: String, active: bool, draft: bool, preference_settings: models::PreferenceChannels, critical: bool, tags: Vec<String>, steps: Vec<models::NotificationStep>, _organization_id: String, _creator_id: String, _environment_id: String, triggers: Vec<models::NotificationTrigger>, _notification_group_id: String, deleted: bool, deleted_at: String, deleted_by: String) -> WorkflowResponse {
        WorkflowResponse {
            _id: None,
            name,
            description,
            active,
            draft,
            preference_settings: Box::new(preference_settings),
            critical,
            tags,
            steps,
            _organization_id,
            _creator_id,
            _environment_id,
            triggers,
            _notification_group_id,
            _parent_id: None,
            deleted,
            deleted_at,
            deleted_by,
            notification_group: None,
            data: None,
            workflow_integration_status: None,
        }
    }
}

