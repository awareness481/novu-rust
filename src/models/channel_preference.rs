/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChannelPreference {
    /// The type of channel that is enabled or not
    #[serde(rename = "type")]
    pub r#type: Type,
    /// If channel is enabled or not
    #[serde(rename = "enabled")]
    pub enabled: bool,
}

impl ChannelPreference {
    pub fn new(r#type: Type, enabled: bool) -> ChannelPreference {
        ChannelPreference { r#type, enabled }
    }
}
/// The type of channel that is enabled or not
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "in_app")]
    InApp,
    #[serde(rename = "email")]
    Email,
    #[serde(rename = "sms")]
    Sms,
    #[serde(rename = "chat")]
    Chat,
    #[serde(rename = "push")]
    Push,
}

impl Default for Type {
    fn default() -> Type {
        Self::InApp
    }
}
