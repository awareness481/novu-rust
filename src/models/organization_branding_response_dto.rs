/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrganizationBrandingResponseDto {
    #[serde(rename = "direction", skip_serializing_if = "Option::is_none")]
    pub direction: Option<Direction>,
    #[serde(rename = "logo")]
    pub logo: String,
    #[serde(rename = "color")]
    pub color: String,
    #[serde(rename = "fontColor")]
    pub font_color: String,
    #[serde(rename = "contentBackground")]
    pub content_background: String,
    #[serde(rename = "fontFamily", skip_serializing_if = "Option::is_none")]
    pub font_family: Option<String>,
}

impl OrganizationBrandingResponseDto {
    pub fn new(logo: String, color: String, font_color: String, content_background: String) -> OrganizationBrandingResponseDto {
        OrganizationBrandingResponseDto {
            direction: None,
            logo,
            color,
            font_color,
            content_background,
            font_family: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Direction {
    #[serde(rename = "ltr")]
    Ltr,
    #[serde(rename = "trl")]
    Trl,
}

impl Default for Direction {
    fn default() -> Direction {
        Self::Ltr
    }
}

