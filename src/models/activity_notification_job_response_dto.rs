/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ActivityNotificationJobResponseDto {
    #[serde(rename = "_id")]
    pub _id: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "digest", skip_serializing_if = "Option::is_none")]
    pub digest: Option<serde_json::Value>,
    #[serde(rename = "executionDetails")]
    pub execution_details: Vec<models::ActivityNotificationExecutionDetailResponseDto>,
    #[serde(rename = "step")]
    pub step: Box<models::ActivityNotificationStepResponseDto>,
    #[serde(rename = "payload", skip_serializing_if = "Option::is_none")]
    pub payload: Option<serde_json::Value>,
    #[serde(rename = "providerId")]
    pub provider_id: serde_json::Value,
    #[serde(rename = "status")]
    pub status: String,
}

impl ActivityNotificationJobResponseDto {
    pub fn new(_id: String, r#type: String, execution_details: Vec<models::ActivityNotificationExecutionDetailResponseDto>, step: models::ActivityNotificationStepResponseDto, provider_id: serde_json::Value, status: String) -> ActivityNotificationJobResponseDto {
        ActivityNotificationJobResponseDto {
            _id,
            r#type,
            digest: None,
            execution_details,
            step: Box::new(step),
            payload: None,
            provider_id,
            status,
        }
    }
}

