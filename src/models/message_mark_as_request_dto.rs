/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessageMarkAsRequestDto {
    #[serde(rename = "messageId")]
    pub message_id: Box<models::MarkMessageAsRequestDtoMessageId>,
    #[serde(rename = "markAs")]
    pub mark_as: MarkAs,
}

impl MessageMarkAsRequestDto {
    pub fn new(message_id: models::MarkMessageAsRequestDtoMessageId, mark_as: MarkAs) -> MessageMarkAsRequestDto {
        MessageMarkAsRequestDto {
            message_id: Box::new(message_id),
            mark_as,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MarkAs {
    #[serde(rename = "read")]
    Read,
    #[serde(rename = "seen")]
    Seen,
    #[serde(rename = "unread")]
    Unread,
    #[serde(rename = "unseen")]
    Unseen,
}

impl Default for MarkAs {
    fn default() -> MarkAs {
        Self::Read
    }
}

