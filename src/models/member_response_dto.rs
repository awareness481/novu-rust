/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MemberResponseDto {
    #[serde(rename = "_id")]
    pub _id: String,
    #[serde(rename = "_userId")]
    pub _user_id: String,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<models::MemberUserDto>>,
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<Roles>>,
    #[serde(rename = "invite", skip_serializing_if = "Option::is_none")]
    pub invite: Option<Box<models::MemberInviteDto>>,
    #[serde(rename = "memberStatus", skip_serializing_if = "Option::is_none")]
    pub member_status: Option<MemberStatus>,
    #[serde(rename = "_organizationId")]
    pub _organization_id: String,
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Roles {
    #[serde(rename = "admin")]
    Admin,
    #[serde(rename = "member")]
    Member,
}

impl Default for Roles {
    fn default() -> Roles {
        Self::Admin
    }
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum MemberStatus {
    #[serde(rename = "new")]
    New,
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "invited")]
    Invited,
}

impl Default for MemberStatus {
    fn default() -> MemberStatus {
        Self::New
    }
}
