/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TopicDto {
    #[serde(rename = "_id", skip_serializing_if = "Option::is_none")]
    pub _id: Option<String>,
    #[serde(rename = "_organizationId")]
    pub _organization_id: String,
    #[serde(rename = "_environmentId")]
    pub _environment_id: String,
    #[serde(rename = "key")]
    pub key: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "subscribers")]
    pub subscribers: Vec<String>,
}

impl TopicDto {
    pub fn new(_organization_id: String, _environment_id: String, key: String, name: String, subscribers: Vec<String>) -> TopicDto {
        TopicDto {
            _id: None,
            _organization_id,
            _environment_id,
            key,
            name,
            subscribers,
        }
    }
}

