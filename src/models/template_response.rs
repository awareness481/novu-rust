/*
 * Novu API
 *
 * Novu REST API. Please see https://docs.novu.co/api-reference for more details.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@novu.co
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TemplateResponse {
    /// Unique identifier of the workflow
    #[serde(rename = "_id")]
    pub _id: String,
    /// Name of the workflow
    #[serde(rename = "name")]
    pub name: String,
    /// Critical templates will always be delivered to the end user and should be hidden from the subscriber preferences screen
    #[serde(rename = "critical")]
    pub critical: bool,
    /// Triggers are the events that will trigger the workflow.
    #[serde(rename = "triggers")]
    pub triggers: Vec<String>,
}

impl TemplateResponse {
    pub fn new(
        _id: String,
        name: String,
        critical: bool,
        triggers: Vec<String>,
    ) -> TemplateResponse {
        TemplateResponse {
            _id,
            name,
            critical,
            triggers,
        }
    }
}
